name: "CI - Stage 1 - .NET Identity Microservice"

on:
  push:
    branches:
      - main
      - develop
      - "feature/**"
      - "release/**"
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: üîÑ Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./TestResults

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: "**/TestResults/**"
          retention-days: 7

  code-quality:
    name: üîç Code Quality
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      # - name: Code Format Check
      #   run: dotnet format --verify-no-changes --severity error
      - name: Code Format Check
        run: dotnet format UserManagement.sln --verify-no-changes --severity error

      - name: Install SonarScanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarQube Analysis
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
          /k:"${{ secrets.SONAR_PROJECT_KEY || 'tradeport-identity-service' }}" \
          /o:"${{ secrets.SONAR_ORGANIZATION || github.repository_owner }}" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.cobertura.xml" \
          /d:sonar.coverage.exclusions="**Tests.cs,**/Program.cs" \
          /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

      - name: Build for Analysis
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'pull_request'
        run: |
          dotnet restore
          dotnet build --no-incremental --configuration Release

      - name: End SonarQube Analysis
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  security-scan:
    name: üõ°Ô∏è Security Scanning
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: NuGet Vulnerability Scan
        run: |
          dotnet restore
          dotnet list package --vulnerable --include-transitive > security-report.txt || true
          cat security-report.txt

      - name: Check for High Severity Vulnerabilities
        run: |
          if grep -i "Severity.*High\|Severity.*Critical" security-report.txt; then
            echo "‚ö†Ô∏è High or Critical severity vulnerabilities detected"
            # For initial setup, warning only
            # exit 1
          fi

      - name: Upload Security Report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.txt
          retention-days: 7

  docker:
    name: üê≥ Docker Build
    runs-on: ubuntu-latest
    needs: [code-quality, security-scan]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: tradeport-identity:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=docker,dest=/tmp/identity-image.tar

      - name: Upload Docker Image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: /tmp/identity-image.tar
          retention-days: 1
