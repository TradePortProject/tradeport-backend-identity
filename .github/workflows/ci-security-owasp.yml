name: "CI - Stage 2 - Security Scan - SAST & SCA (.NET)"

on:
  push:
    branches: [main, "feature/**"]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: 📐 Security Scan Setup (.NET)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore

  dotnet-vulnerabilities:
    name: 🧪 SCA - dotnet list package
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Scan for vulnerabilities
        run: dotnet list package --vulnerable > dotnet-vuln-report.txt || true

      - name: Show high severity vulnerabilities
        run: |
          if grep -i "Severity.*High" dotnet-vuln-report.txt; then
            echo "⚠️ High severity vulnerabilities detected."
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: dotnet-vulnerability-report
          path: dotnet-vuln-report.txt
          retention-days: 7

  owasp-sca:
    name: 🧪 SCA - OWASP Dependency Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Download OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.2.0/dependency-check-7.2.0-release.zip
          unzip dependency-check-7.2.0-release.zip

      - name: Run OWASP Scan
        run: |
          dependency-check/bin/dependency-check.sh \
            --project "YourDotNetMicroservice" \
            --scan . \
            --format "ALL" \
            --out . \
            --enableExperimental \
            | tee dependency-check-report.txt || true

      - name: Check for Critical vulnerabilities
        run: |
          if grep -q "CRITICAL" dependency-check-report.txt; then
            echo "🚨 Critical vulnerabilities found"
            grep "CRITICAL" dependency-check-report.txt
            exit 1
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check
          path: |
            dependency-check-report.html
            dependency-check-report.xml
            dependency-check-report.json
          retention-days: 7

  dotnet-outdated:
    name: 🧪 SCA - Check Outdated NuGet Packages
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install dotnet-outdated tool
        run: dotnet tool install --global dotnet-outdated-tool

      - name: Check for outdated packages
        run: dotnet outdated -o outdated-packages.json -f json

      - uses: actions/upload-artifact@v4
        with:
          name: dotnet-outdated-report
          path: outdated-packages.json
          retention-days: 7

  archive:
    name: 📦 Final Security Archive
    runs-on: ubuntu-latest
    needs: [dotnet-vulnerabilities, owasp-sca, dotnet-outdated]
    steps:
      - name: ✅ Security scan summary
        run: echo "✔ All security checks (SCA + SAST) completed for .NET Microservice."
