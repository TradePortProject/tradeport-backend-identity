name: "Security Scan - .NET Identity Microservice"

on:
  schedule:
    - cron: '0 2 * * 1' # Weekly on Mondays at 2am
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '**/*.csproj'
      - '**/packages.config'
      - '**/packages.lock.json'

jobs:
  security-scan:
    name: 🛡️ .NET Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Basic Security Scan
        run: |
          dotnet list package --vulnerable --include-transitive > vulnerability-report.txt || true
          echo "## Vulnerability Summary" > security-report.md
          echo "Generated on $(date)" >> security-report.md
          
          if grep -i "Severity.*High\|Severity.*Critical" vulnerability-report.txt; then
            echo "### ⚠️ High/Critical Vulnerabilities Detected" >> security-report.md
            echo "\`\`\`" >> security-report.md
            grep -i -A 3 "Severity.*High\|Severity.*Critical" vulnerability-report.txt >> security-report.md
            echo "\`\`\`" >> security-report.md
          else
            echo "### ✅ No High/Critical Vulnerabilities Detected" >> security-report.md
          fi

      - name: Install Security Code Scan
        run: dotnet tool install --global security-scan

      - name: Run Security Code Scan
        continue-on-error: true  # Don't fail pipeline during initial setup
        run: security-scan --export=security-scan-results.sarif

      - name: Upload Security Reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            vulnerability-report.txt
            security-report.md
            security-scan-results.sarif
          retention-days: 90

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: security-scan-results.sarif
      
  dependency-check:
    name: 🧪 OWASP Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Download OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
          unzip dependency-check-8.4.0-release.zip

      - name: Run OWASP Scan
        run: |
          dependency-check/bin/dependency-check.sh \
            --project "tradeport-identity-service" \
            --scan . \
            --format "ALL" \
            --out . \
            --enableExperimental \
            --suppression ./.github/owasp-suppressions.xml \
            | tee dependency-check-log.txt || true

      - name: Upload OWASP Reports
        uses: actions/upload-artifact@v4
        with:
          name: owasp-reports
          path: |
            dependency-check-report.html
            dependency-check-report.xml
            dependency-check-report.json
            dependency-check-log.txt
          retention-days: 90
          
  outdated-packages:
    name: 📦 Outdated NuGet Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Install dotnet-outdated tool
        run: dotnet tool install --global dotnet-outdated-tool

      - name: Check for outdated packages
        run: dotnet outdated -o outdated-packages.json -f json

      - name: Generate readable report
        run: |
          echo "# NuGet Package Update Report" > outdated-report.md
          echo "Generated on $(date)" >> outdated-report.md
          echo "## Packages requiring updates" >> outdated-report.md
          echo "\`\`\`" >> outdated-report.md
          cat outdated-packages.json | jq -r '.[]? | "\(.project): \(.packageId) \(.version) -> \(.latestVersion)"' >> outdated-report.md || echo "No outdated packages found" >> outdated-report.md
          echo "\`\`\`" >> outdated-report.md

      - name: Upload reports
        uses: actions/upload-artifact@v4
        with:
          name: package-update-report
          path: |
            outdated-packages.json
            outdated-report.md
          retention-days: 30
          
  summary:
    name: 📊 Security Summary
    needs: [security-scan, dependency-check, outdated-packages]
    runs-on: ubuntu-latest
    steps:
      - name: Generate Security Summary
        run: |
          echo "# Security Scan Summary Report" > summary.md
          echo "## Scan Date" >> summary.md
          echo "$(date)" >> summary.md
          echo "## Repository" >> summary.md
          echo "${{ github.repository }}" >> summary.md
          echo "## Workflow Run" >> summary.md
          echo "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> summary.md
          echo "## Next Steps" >> summary.md
          echo "1. Review security reports in workflow artifacts" >> summary.md
          echo "2. Fix any high or critical vulnerabilities" >> summary.md
          echo "3. Update outdated packages" >> summary.md
      
      - name: Upload Summary
        uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: summary.md
          retention-days: 90