name: "CI - Stage 2 - Security Scan - SAST & SCA (.NET)"

on:
  push:
    branches: [main, develop, "feature/**"]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: 📐 Security Scan Setup (.NET)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.nuget/packages
            **/bin
            **/obj
          key: ${{ runner.os }}-security-${{ hashFiles('**/*.csproj', '**/packages.lock.json') }}

      - name: Restore dependencies
        run: dotnet restore --use-lock-file

  dotnet-vulnerabilities:
    name: 🧪 SCA - NuGet Vulnerabilities
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Scan for vulnerabilities
        run: |
          dotnet list package --vulnerable --include-transitive > dotnet-vuln-report.json
          cat dotnet-vuln-report.json

      - name: Check vulnerabilities
        run: |
          if jq -e '.[].vulnerabilities | select(. != null)' dotnet-vuln-report.json >/dev/null; then
            echo "##[error]Vulnerable packages found:"
            jq -r '.[] | select(.vulnerabilities != null) | "\(.topLevelPackage): \(.vulnerabilities[].severity) - \(.vulnerabilities[].advisoryUrl)"' dotnet-vuln-report.json
            if [[ "${{ github.event_name }}" == "pull_request" ]]; then
              exit 1
            fi
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: dotnet-vulnerability-report
          path: dotnet-vuln-report.json
          retention-days: 7

  owasp-sca:
    name: 🧪 SCA - OWASP Dependency Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Cache OWASP DC
        id: cache-owasp
        uses: actions/cache@v3
        with:
          path: dependency-check
          key: ${{ runner.os }}-owasp-8.4.0

      - name: Download OWASP DC
        if: steps.cache-owasp.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
          unzip dependency-check-8.4.0-release.zip -d dependency-check

      - name: Run OWASP Scan
        run: |
          ./dependency-check/bin/dependency-check.sh \
            --project "${{ github.repository }}" \
            --scan . \
            --format "JSON" \
            --out ./security-reports \
            --enableExperimental \
            --suppression ./.github/owasp-suppressions.xml \
            --failOnCVSS 9

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check
          path: security-reports/dependency-check-report.json
          retention-days: 7

  security-code-scan:
    name: 🔍 SAST - Security Code Scan
    runs-on: ubuntu-latest
    needs: setup
    permissions:
      security-events: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Install security-scan
        run: dotnet tool install --global dotnet-security-scan

      - name: Run scan
        run: |
          dotnet security-scan --output security-results.sarif --format sarif --fail-on high
          if [ -f "security-results.sarif" ]; then
            echo "sarif_exists=true" >> $GITHUB_OUTPUT
          else
            echo "sarif_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload SARIF
        if: steps.check_file.outputs.sarif_exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: security-results.sarif

      - uses: actions/upload-artifact@v4
        with:
          name: security-scan-results
          path: security-results.sarif
          retention-days: 7

  dotnet-outdated:
    name: 🧪 SCA - Outdated Packages
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - name: Install dotnet-outdated
        run: dotnet tool install --global dotnet-outdated-tool

      - name: Check outdated packages
        run: |
          dotnet outdated --output outdated-report.json --format json --ignore-transitive
          echo "## Outdated Packages ##"
          jq -r '.[] | "\(.name)@\(.version) → \(.latestVersion)"' outdated-report.json || echo "No outdated packages found"

      - uses: actions/upload-artifact@v4
        with:
          name: outdated-packages
          path: outdated-report.json
          retention-days: 7

  notify:
    name: 📢 Security Summary
    runs-on: ubuntu-latest
    needs:
      - dotnet-vulnerabilities
      - owasp-sca
      - security-code-scan
      - dotnet-outdated
    steps:
      - name: Generate summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "## Scan Results" >> security-summary.md
          echo "- ✅ All security scans completed" >> security-summary.md
          echo "- 📅 $(date)" >> security-summary.md
          echo "- 🔗 [View Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> security-summary.md

      - uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 30
