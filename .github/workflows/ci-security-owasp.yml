name: "CI - Stage 2 - Security Scan - SAST & SCA (.NET)"

on:
  push:
    branches: [main, develop, "feature/**", "release/**"]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 1' # Weekly on Mondays at 2am

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  setup:
    name: 📐 Security Scan Setup (.NET)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
          cache: true

      - name: Restore dependencies
        run: dotnet restore

  dotnet-vulnerabilities:
    name: 🧪 SCA - dotnet list package
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
          cache: true

      - name: Scan for vulnerabilities
        run: dotnet list package --vulnerable --include-transitive > dotnet-vuln-report.txt || true

      - name: Show high severity vulnerabilities
        run: |
          if grep -i "Severity.*High\|Severity.*Critical" dotnet-vuln-report.txt; then
            echo "⚠️ High or Critical severity vulnerabilities detected."
            grep -i "Severity.*High\|Severity.*Critical" dotnet-vuln-report.txt
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: dotnet-vulnerability-report
          path: dotnet-vuln-report.txt
          retention-days: 7

  owasp-sca:
    name: 🧪 SCA - OWASP Dependency Check
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: 'maven'

      - name: Download OWASP Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
          unzip dependency-check-8.4.0-release.zip

      - name: Run OWASP Scan
        run: |
          dependency-check/bin/dependency-check.sh \
            --project "tradeport-backend-identity" \
            --scan . \
            --format "ALL" \
            --out . \
            --enableExperimental \
            --enableRetired \
            --suppression ./.github/owasp-suppressions.xml \
            | tee dependency-check-report.txt || true

      - name: Check for Critical vulnerabilities
        run: |
          if grep -q "CRITICAL" dependency-check-report.txt; then
            echo "🚨 Critical vulnerabilities found"
            grep "CRITICAL" dependency-check-report.txt
            # Comment out the line below to prevent pipeline failure during initial scan setup
            # exit 1
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check
          path: |
            dependency-check-report.html
            dependency-check-report.xml
            dependency-check-report.json
          retention-days: 7

  snyk-security:
    name: 🔒 Snyk Security Scan
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
          cache: true

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        continue-on-error: true # Don't fail pipeline
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high --all-projects

      - name: Upload Snyk report
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
          
  dotnet-outdated:
    name: 🧪 SCA - Check Outdated NuGet Packages
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
          cache: true

      - name: Install dotnet-outdated tool
        run: dotnet tool install --global dotnet-outdated-tool

      - name: Check for outdated packages
        run: dotnet outdated -o outdated-packages.json -f json

      - name: Generate outdated packages report
        run: |
          echo "# NuGet Package Update Report" > outdated-report.md
          echo "Generated on $(date)" >> outdated-report.md
          echo "## Packages requiring updates" >> outdated-report.md
          echo "\`\`\`" >> outdated-report.md
          cat outdated-packages.json | jq -r '.[]? | "\(.project): \(.packageId) \(.version) -> \(.latestVersion)"' >> outdated-report.md || echo "No outdated packages found" >> outdated-report.md
          echo "\`\`\`" >> outdated-report.md

      - uses: actions/upload-artifact@v4
        with:
          name: dotnet-outdated-report
          path: |
            outdated-packages.json
            outdated-report.md
          retention-days: 7

  security-code-scan:
    name: 🔍 SAST - Security Code Scan
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"
          cache: true

      - name: Install Security Code Scan
        run: dotnet tool install --global security-scan

      - name: Run Security Code Scan
        run: security-scan --export=security-scan-results.sarif || true

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: security-scan-results.sarif

  archive:
    name: 📦 Final Security Archive
    runs-on: ubuntu-latest
    needs: [dotnet-vulnerabilities, owasp-sca, dotnet-outdated, security-code-scan, snyk-security]
    steps:
      - name: ✅ Security scan summary
        run: echo "✔ All security checks (SCA + SAST) completed for Identity Microservice."
      
      - name: 📊 Create security report summary
        run: |
          echo "# Security Scan Summary" > security-summary.md
          echo "## Scan Timestamp" >> security-summary.md
          echo "$(date)" >> security-summary.md
          echo "## Workflow Run" >> security-summary.md
          echo "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> security-summary.md
          echo "## Results" >> security-summary.md
          echo "- Check the workflow artifacts for detailed reports" >> security-summary.md
      
      - uses: actions/upload-artifact@v4
        with:
          name: security-summary
          path: security-summary.md
          retention-days: 30
